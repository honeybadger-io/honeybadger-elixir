version: 2.1
commands:
  test:
    steps:
      - run: mix test

  checkout-and-cache:
    steps:
      - checkout
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: mix do deps.get, compile
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

jobs:
  test17:
    docker:
      - image: circleci/elixir:1.7
    steps:
      - checkout-and-cache
      - test
  test18:
    docker:
      - image: circleci/elixir:1.8
    steps:
      - checkout-and-cache
      - test
  test19:
    docker:
      - image: circleci/elixir:1.9
    steps:
      - checkout-and-cache
      - test
  format:
    docker:
      - image: circleci/elixir:1.8
    steps:
      - checkout-and-cache
      - run: mix format --check-formatted
  dialyzer:
    docker:
      - image: circleci/elixir:1.8
    steps:
      - checkout-and-cache
      - run: mix dialyzer --halt-exit-status

workflows:
  version: 2
  build-and-test:
    jobs:
      - test17
      - test18
      - test19
  format:
    jobs:
      - format
  dialyzer:
    jobs:
      - dialyzer
